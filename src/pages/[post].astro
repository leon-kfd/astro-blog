---
import Blog from "@layouts/blog";
import Date from "@components/utilities/Date";
import { published, getRSS } from "@data/post"

export async function getStaticPaths({ rss }) {
	const markdownFiles = await Astro.glob('../content/**/*.md');
	const posts = published( markdownFiles );
	
	// rss(getRSS(markdownFiles));

	return posts.map((post) => {
		return {
			params: { post: post.slug },
			props: { post }
		};
	})
}

// Destructure to get both `Astro.props.post` and `Astro.props.post.Content`
const { post: { Content }, post } = Astro.props;
---
<Blog title={post.title} desc={post.desc} img={post.img ? post.img : null}>
	<div class="flex justify-center">
		<div class="py-2 prose lg:py-6 lg:prose-lg w-full">
			{ post.img &&
				<figure class="flex justify-center">
					<img transition:name={`img-${post.slug}`} src={post.img} alt={post.title} class="rounded bg-base-200" />
				</figure>
			}
			<h2 transition:name={`title-${post.slug}`} class="text-2xl font-bold">{post.title}</h2>
			<div class="flex gap-3">
				<span class="badge badge-ghost">
					<Date date={post.date}/>
				</span>
				{post.author &&
					<span class="text-sm text-base-content/70">By {post.author}</span>
				}
			</div>
			<div class="article-wrapper">
				<Content />
			</div>
		</div>
	</div>
</Blog>
<script>
import ImgZoom from '@howdyjs/img-zoom';
const imgs = [...document.querySelectorAll('.article-wrapper img')];
imgs.map((img) => {
	new ImgZoom({
		el: img,
		options: {
			title: img.alt,
			group: 'article',
			zoomCursor: true,
			showCloseBtn: true,
		}
	});
});
</script>
